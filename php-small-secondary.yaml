heat_template_version: 2015-10-15

description: |
 #### PHP Secondary

parameter_groups:

parameters:
  server_name:
    type: string
    default: example-0
  server_flavor:
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
  server_image:
    type: string
    default: CentOS 7 (PVHVM) (Orchestration)
    label: Server Image
    description: Image to be used for all servers in this stack
    constraints:
    - allowed_values:
      - Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM) (Orchestration)
      - CentOS 7 (PVHVM) (Orchestration)
    immutable: true
  ssh_key:
    type: string
    label: SSH Key
    description: SSH Key for PHP Slave Nodes
  parent_stack_id:
    type: string
    default: None
  apache_default_domain:
    type: string
    default: exmaple.com
  master_server:
    type: string
  php_myadmin:
    type: boolean
    default: false
  ansible_source:
    type: string
    default: http://catalog.rs-heat.com/ansible-roles/ansible-roles.tar.gz
    label: Ansible Tarball
    description: The Ansible Roles will be pulled from the location provided
    immutable: true
resources:
  upload_role_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      outputs:
      - name: results
      config:
        str_replace:
          template: |
            #!/bin/bash
            set -e
            mkdir -p /etc/ansible/roles
            wget ansible_source -O /tmp/ansible-roles.tar.gz 2>&1
            tar -xf /tmp/ansible-roles.tar.gz --strip-components=1 -C /etc/ansible/roles
          params:
            ansible_source: { get_param: ansible_source }


  php_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Install and configure PHP
          hosts: localhost
          connection: local
          roles:
          - common
          - nginx
          - php-fpm
          - firewall
  deploy_roles:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: upload_role_config
      server:
        get_resource: php_server
  deploy_php:
    type: OS::Heat::SoftwareDeployment
    depends_on: deploy_roles
    properties:
      signal_transport: TEMP_URL_SIGNAL
      input_values:
        nginx_vhost_str: { get_param: apache_default_domain }
        nginx_vhost_template: 'default_secondary'
        nginx_vhost_phpmyadmin: { get_param: php_myadmin }
        nginx_upstream_server: { get_param: master_server }
        tz: "America/Chicago"
      config:
        get_resource: php_config
      server:
        get_resource: php_server
  php_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "server_name" }
      key_name: { get_param: "ssh_key" }
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      software_config_transport: POLL_TEMP_URL
      config_drive: true
      user_data_format: SOFTWARE_CONFIG
      metadata:
        rax-heat: { get_param: "parent_stack_id" }
        build_config: "monitoring_defaults"
  php_server_http_check:
    type: Rackspace::CloudMonitoring::Check
    depends_on: deploy_php
    properties:
      entity: { get_resource: php_server }
      type: remote.http
      label:
        str_replace:
          template: stack Node HTTP Check
          params:
            stack: { get_param: "OS::stack_name" }
      details:
        url:
          str_replace:
            template: "http://ipaddr"
            params:
              ipaddr: { get_attr: [php_server, accessIPv4] }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
      period: 120
      timeout: 10
      monitoring_zones_poll:
      - Northern Virginia (IAD)
      - Chicago (ORD)
      - Dallas Fort Worth (DFW)
      - London (LON)
      target_hostname: { get_attr: [php_server, accessIPv4] }
      target_receiver: IPv4

outputs:
  public_ip:
    description: Server Public IP
    value:
      get_attr: [php_server, accessIPv4]
  private_ip:
    description: Server Private IP
    value:
      get_attr: [php_server, networks, private, 0]
